clc;
clear;

% === 连杆参数 ===
l1 = 1.0;    % 连杆1长度
l2 = 0.8;    % 连杆2长度

% === 关节角度范围 ===
theta1_vals = linspace(0, pi/2, 100);
theta2_vals = linspace(0, pi/2, 100);

% === 轨迹记录初始化 ===
x_traj = [];
y_traj = [];

% === 图像设置 ===
figure;
axis equal;
grid on;
xlim([-0.1, l1 + l2 + 0.1]);
ylim([-0.1, l1 + l2 + 0.1]);
xlabel('X Position (m)');
ylabel('Y Position (m)');
title('2-DOF机械臂（投影法）结构动画');

for i = 1:length(theta1_vals)
    theta1 = theta1_vals(i);
    theta2 = theta2_vals(i);

    % === 投影法正运动学计算 ===
    % 第一段连杆末端（关节2）位置
    x1 = l1 * cos(theta1);
    y1 = l1 * sin(theta1);

    % 第二段连杆末端（末端执行器）位置
    x2 = x1 + l2 * cos(theta1 + theta2);
    y2 = y1 + l2 * sin(theta1 + theta2);

    % === 存储轨迹 ===
    x_traj(end+1) = x2;
    y_traj(end+1) = y2;

    % === 动态绘图 ===
    clf;
    hold on;

    % 连杆1
    plot([0, x1], [0, y1], 'r-', 'LineWidth', 4);

    % 连杆2
    plot([x1, x2], [y1, y2], 'b-', 'LineWidth', 4);

    % 绘制关节和末端
    plot(0, 0, 'ko', 'MarkerSize', 8, 'MarkerFaceColor', 'k');  % 基座
    plot(x1, y1, 'go', 'MarkerSize', 8, 'MarkerFaceColor', 'g'); % 关节2
    plot(x2, y2, 'mo', 'MarkerSize', 8, 'MarkerFaceColor', 'm'); % 末端

    % 绘制轨迹
    plot(x_traj, y_traj, 'k--');

    % 图像设置
    xlim([-0.1, l1 + l2 + 0.1]);
    ylim([-0.1, l1 + l2 + 0.1]);
    title('2-DOF机械臂正运动学动画（投影法）');
    xlabel('X Position (m)');
    ylabel('Y Position (m)');
    grid on;
    axis equal;

    pause(0.03);  % 控制动画速度
end
